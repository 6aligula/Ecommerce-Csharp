@model E_Commerce_App.WebUI.ViewModels.ProductListViewModel
@{
    Layout = "_Layout";
}
@section Css{
    <!-- Product Css -->
    <link rel="stylesheet" href="~/css/product.css" />
    <style>

        .bag-button {
            border: 1px solid #386ded;
            background: #386ded;
            color: #fff;
        }

        .bag-button:hover {
            background-image: linear-gradient(to right, #386ded, #3b4dd4);
            color: #fff;
        }

        .wish-button:hover {
            background-image: linear-gradient(to right, #386ded, #3b4dd4);
            color: #fff;
        }

        .wish-button {
            border: 1px solid #386ded;
            background: #386ded;
            color: #fff;
        }

        .dress-card-off {
            color: #e34b60 !important;
        }
    </style>
}
<br />
@await Component.InvokeAsync("Categories")
<br />
<div class="row" id="productsArea">

</div>
<!--  TODO eğer sepete ekle yapınca kullanıcı login olmamışsa login sayfasına yönlendir
    parametre olark returnurl kullan controller kısmında kontrol edilir-->
<div class="wrapper">
    <div class="container">
        <div class="row">
            <div class="col-sm-12">
                <div>
                    <ul id="pagination-demo" class="pagination-sm"></ul>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script src="~/node_modules/twbs-pagination/jquery.twbsPagination.min.js"></script>
    <script>

        function getUrlVars() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(hash[0]);
                vars[hash[0]] = hash[1];
            }
            return vars;
        }

        // todo yine bir regex işlemi qğer query varsa oraya istek at yoksa normal page a istek at
        $('#pagination-demo').twbsPagination({

            // \/Admin\/Product\/Add Regex for add url
            // \/Admin\/Product\/Edit\/\b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b Regex for Edit Url
            // şuan guid kullanma

            // https://localhost:44373/Home/Index?query=%C3%BCr%C3%BCn
            // boş ise url normal
            // query = ""
            totalPages: @Model.PageInfo.GetTotalPage(), // todo sayıları arama kriterine göre değiştir
            visiblePages: 6,
            next: 'Sonraki',
            prev: 'Önceki',
            onPageClick: function (event, page) {

                var url = "@Context.Request.Path@Context.Request.QueryString";
                url = decodeURI(url);
                console.log(url);

                var query = decodeURI(getUrlVars()["query"]);


                console.log(query);



                const queryUrlRegex = new RegExp('(\/Home\/Index[(\?)]query=(.)*)');

                var actionUrl = "";
                var data = "";
                if (queryUrlRegex.test(url)) {
                    actionUrl = '/GetSearchedProducts/' + query + '/';
                    data = '{query:' + query + ', page:' + page + '}';
                } else {
                    actionUrl = '/GetProducts/';
                    data = '{page:' + page + '}';
                }
                console.log(actionUrl);
                //fetch content and render here
                $.ajax({
                    type: 'GET',
                    url: actionUrl + page,
                    data: data,
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        $("#productsArea").html("");
                        var products = res.data.products;
                        console.log(res.data);
                        for (var i = 0; i < products.length; i++) {
                            console.log(products.length);
                            $("#productsArea").append(product(products, i));
                        }
                    }
                });
            }
        });

        //${
        //    data[index].discount != null && data[index].discount > 0 ? data[index].price - (data[index].price / data[index].discount) + "₺" : data[index].price + "₺"
        //}
        function getPrice(data, index) {
            let html = ``;
            if (data[index].discount != null && data[index].discount > 0) {
                html = `<p class="dress-card-para"><span class="dress-card-price">${data[index].price - (data[index].price / data[index].discount) + "&nbsp;₺"}</span>
                        <span class="dress-card-crossed">${data[index].price}&nbsp;₺</span><span class="dress-card-off float-right">&ensp; (% ${data[index].discount} İndirim)</span>
                        </p>`
            }
            else {
                html = `<p class="dress-card-para"><span class="dress-card-price">${data[index].price} &nbsp;₺ &ensp;</span></p>`;
            }
            return html;
        }
        function product(data, index){
            let html =
                `
                <div class="col-md-3">
                    <div class="dress-card">
                        <div class="dress-card-head">
                            <img class="dress-card-img-top" src="/img/${data[index].mainImage}" alt="" height="320"/>
                            <div class="surprise-bubble">
                                <span class="dress-card-heart">
                                    <i class="fas fa-shopping-cart"></i>
                                </span><a href="#"><span>Ekle</span></a>
                            </div>
                        </div>
                        <div class="dress-card-body">
                            <h4 class="dress-card-title">${data[index].name}</h4>
                            <p class="dress-card-para">
                            ${ getPrice(data, index) }
                            <div class="row">
                              <div class="col-md-6 card-button"><a href=""><div class="card-button-inner bag-button">Sepete Ekle</div></a></div>
                              <div class="col-md-6 card-button"><a href="${data[index].url}"><div class="card-button-inner wish-button">İncele > </div></a></div>
                            </div>
                      </div>
                    </div>
                </div>
                `;
            return html;
        }


    </script>
}
<style>
    .wrapper {
        margin: 60px auto;
        text-align: center;
    }

    h1 {
        margin-bottom: 1.25em;
    }

    #pagination-demo {
        display: inline-block;
        margin-bottom: 1.75em;
    }

        #pagination-demo li {
            display: inline-block;
        }

    .page-content {
        background: #eee;
        display: inline-block;
        padding: 10px;
        width: 100%;
        max-width: 660px;
    }
</style>
